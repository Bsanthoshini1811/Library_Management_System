
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Online Library</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-ZCBKRCUGAJDkqS1KPBPD7TVEP5IYJE0EJAUZQTGFLD2YLZUQKFDKLFG/EKRTXUKN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* General Styling */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #9ea3a9;
            margin: 0;
            padding: 0;
        }
        
        .container {
            max-width: 900px;
            margin: 60px auto;
            background-color: #ffffff;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 6px 24px rgba(0, 0, 0, 0.15);

        }
        
        h1 {
            font-size: 32px;
            font-weight: bold;
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }
        
        hr {
            border-top: 1px solid #ddd;
            margin: 20px 0;
        }
        
        .navbar {
            background-color: #212529;
            padding: 15px 30px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .home-icon {
            color: #f8f9fa;
            font-size: 36px;
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .home-icon:hover {
            color: #ffc107;
        }
        
        .form-group label {
            font-weight: bold;
            color: #333;
            font-size: 18px;
        }
        
        .form-group input[type="text"] {
            width: 100%;
            padding: 15px;
            font-size: 18px;
            margin-top: 8px;
            border: 1px solid #ced4da;
            border-radius: 8px;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1);
        }
        
        .form-group input[type="text"]:focus {
            border-color: #80bdff;
            box-shadow: 0px 0px 10px rgba(128, 189, 255, 0.6);
            outline: none;
        }
        
        .form-text {
            color: #6c757d;
            font-size: 15px;
            margin-top: 5px;
        }
        
        button[type="submit"] {
            background-color: #343a40;
            color: #fff;
            font-size: 18px;
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
            box-shadow: 0 5px 12px rgba(52, 58, 64, 0.3);
            width: 100%;
        }
        
        button[type="submit"]:hover {
            background-color: #23272b;
            transform: translateY(-2px);
        }
        
        .table-dark {
            width: 100%;
            border-collapse: collapse;
            margin-top: 25px;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            color: blue;
        }
        
        .table-dark th,
        .table-dark td {
            padding: 15px;
            text-align: left;
            font-size: 18px;
        }
        
        .table-dark th {
            background-color: #343a40;
            color: #ffffff;
            font-weight: bold;
        }
        
        .table-dark td {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }
        
        .table-dark tr:hover td {
            background-color: #e9ecef;
        }
        
        .btn-edit, .btn-delete {
            font-size: 16px;
            padding: 6px 12px;
            border-radius: 4px;
        }
        
        .btn-edit {
            background-color: #17a2b8;
            color: #fff;
        }
        
        .btn-edit:hover {
            background-color: #138496;
        }
        
        .btn-delete {
            background-color: #dc3545;
            color: #fff;
        }
        
        .btn-delete:hover {
            background-color: #c82333;
        }

        /* Chart Section Styling */
        .charts {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            margin-top: 40px;
        }

        .chart-container {
            width: 300px;
            height: 300px;
            margin: 20px;
        }

        .form-check
        {
          margin: 10px;
        }

        @@media (max-width: 1024px) {
    .container {
        max-width: 700px;
        padding: 30px;
    }

    h1 {
        font-size: 28px;
    }

    .form-group input[type="text"] {
        font-size: 16px;
    }

    button[type="submit"] {
        padding: 10px 20px;
        font-size: 16px;
    }

    .table-dark th,
    .table-dark td {
        font-size: 16px;
    }

    .chart-container {
        width: 250px;
        height: 250px;
    }
}

/* Responsive styling for large phones (up to 768px) */
 @@media (max-width: 768px) {
    .container {
        max-width: 100%;
        margin: 20px;
        padding: 20px;
    }

    h1 {
        font-size: 24px;
    }

    .navbar {
        padding: 10px 20px;
        flex-direction: column;
    }

    .form-group input[type="text"] {
        padding: 12px;
        font-size: 14px;
    }

    button[type="submit"] {
        padding: 10px 15px;
        font-size: 15px;
    }

    .table-dark th,
    .table-dark td {
        padding: 12px;
        font-size: 14px;
    }

    .chart-container {
        width: 200px;
        height: 200px;
    }
}

/* Responsive styling for small phones (up to 576px) */
 @@media (max-width: 576px) {
    .container {
        padding: 15px;
    }

    h1 {
        font-size: 20px;
    }

    .form-group label {
        font-size: 16px;
    }

    .form-group input[type="text"] {
        font-size: 14px;
    }

    button[type="submit"] {
        padding: 8px 12px;
        font-size: 14px;
    }

    .table-dark th,
    .table-dark td {
        font-size: 12px;
        padding: 10px;
    }

    .chart-container {
        width: 180px;
        height: 180px;
    }
}

     @@media (max-width: 400px) {
    h1 {
        font-size: 18px;
    }

    .form-group input[type="text"] {
        padding: 10px;
        font-size: 12px;
    }

    button[type="submit"] {
        padding: 6px 10px;
        font-size: 12px;
    }

    .table-dark th,
    .table-dark td {
        font-size: 10px;
        padding: 8px;
    }

    .chart-container {
        width: 150px;
        height: 150px;
    }
}

    </style>
</head>
<body>
    <!-- Navbar with Centered Home Icon -->
    <nav class="navbar">
        <a asp-controller="Home" asp-action="Index" class="home-icon"><i class="fas fa-home"></i></a>
         
        @* <li><a asp-controller="Home" asp-action="Index">Home</a></li> *@
    </nav>

    <div id="alertuser"></div>

    <div class="container my-3">
        <h1>Library Management System</h1>
        <hr />
        <form id="mylibraryform">
            <div class="form-group">
                <label>User ID</label>
                <input type="text" class="form-control" id="User-Name" />
            </div>
            <div class="form-group">
                <label>Book Name</label>
                <input type="text" class="form-control" id="Book-Name" />
            </div>
            <div class="form-group">
                <label>Book Type</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="check-box" id="Fiction" value="Fiction" />
                    <label class="form-check-label" for="Fiction">Fiction</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="check-box" id="Programming" value="Programming" />
                    <label class="form-check-label" for="Programming">Programming</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="check-box" id="Cooking" value="Cooking" />
                    <label class="form-check-label" for="Cooking">Cooking</label>
                </div>
            </div>

            <button type="submit" class="btn btn-outline-dark">Add Book</button>
        </form>

        <table class="table table-dark my-3">
            <thead>
                <tr>
                    <th>Sl No.</th>
                    <th>Date of Issue</th>
                    <th>Reader</th>
                    <th>Book Name</th>
                    <th>Genre</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="table-body"></tbody>
        </table>

        <!-- Chart Containers -->
        <div class="charts">
            <div class="chart-container">
                <canvas id="chart1"></canvas>
            </div>
            <div class="chart-container">
                <canvas id="chart2"></canvas>
            </div>
            <div class="chart-container">
                <canvas id="chart3"></canvas>
            </div>
            <div class="chart-container">
                <canvas id="chart4"></canvas>
            </div>
        </div>
    </div>

    <script>
        let listArray = JSON.parse(localStorage.getItem("listItems")) || [];

        class Display {
            add(arrayInputs) {
                const tableBody = document.getElementById("table-body");
                const today = new Date().toLocaleDateString();
                let html = "";
                arrayInputs.forEach((item, i) => {
                    html += `
                        <tr>
                            <td>${i + 1}</td>
                            <td>${today}</td>
                            <td>${item.userName}</td>
                            <td>${item.bookName}</td>
                            <td>${item.type}</td>
                            <td>
                                <button onclick="editItem(${i})" class="btn btn-edit">Edit</button>
                                <button onclick="deleteItem(${i})" class="btn btn-delete">Delete</button>
                            </td>
                        </tr>`;
                });
                tableBody.innerHTML = html;
                initializeCharts();
            }

            clear() {
                document.getElementById("mylibraryform").reset();
            }
        }

        function deleteItem(index) {
            listArray.splice(index, 1);
            localStorage.setItem("listItems", JSON.stringify(listArray));
            new Display().add(listArray);
        }

        function editItem(index) {
            const item = listArray[index];
            document.getElementById("User-Name").value = item.userName;
            document.getElementById("Book-Name").value = item.bookName;
            document.getElementById(item.type).checked = true;
            deleteItem(index);
        }

        document.getElementById("mylibraryform").addEventListener("submit", function (e) {
            e.preventDefault();
            const userName = document.getElementById("User-Name").value;
            const bookName = document.getElementById("Book-Name").value;
            const type = document.querySelector('input[name="check-box"]:checked').value;

            if (userName && bookName && type) {
                listArray.push({ userName, bookName, type });
                localStorage.setItem("listItems", JSON.stringify(listArray));
                new Display().add(listArray);
                new Display().clear();
            } else {
                alert("Please fill in all fields.");
            }
        });

        function initializeCharts() {
            // Clear existing charts
            Chart.helpers.each(Chart.instances, function(instance) {
                instance.destroy();
            });

            const genres = ['Fiction', 'Programming', 'Cooking'];
            const genreCounts = genres.map(genre => listArray.filter(book => book.type === genre).length);

            // Chart 1: Book Type Distribution
            new Chart(document.getElementById('chart1'), {
                type: 'pie',
                data: {
                    labels: genres,
                    datasets: [{
                        data: genreCounts,
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
                    }]
                }
            });

            // Chart 2: Books Issued Over Time
            new Chart(document.getElementById('chart2'), {
                type: 'line',
                data: {
                    labels: listArray.map((_, i) => i + 1),
                    datasets: [{
                        label: 'Books Issued',
                        data: listArray.map((_, i) => i + 1),
                        fill: false,
                        borderColor: '#4bc0c0',
                    }]
                }
            });

            // Chart 3: Top Users by Books Issued
            const userCount = {};
            listArray.forEach(book => {
                userCount[book.userName] = (userCount[book.userName] || 0) + 1;
            });
            const topUsers = Object.entries(userCount)
                .sort((a, b) => b[1] - a[1])
                .slice(0, 3);

            new Chart(document.getElementById('chart3'), {
                type: 'bar',
                data: {
                    labels: topUsers.map(user => user[0]),
                    datasets: [{
                        label: 'Top Users',
                        data: topUsers.map(user => user[1]),
                        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
                    }]
                }
            });

            // Chart 4: Most Issued Books
            const bookCount = {};
            listArray.forEach(book => {
                bookCount[book.bookName] = (bookCount[book.bookName] || 0) + 1;
            });
            const topBooks = Object.entries(bookCount)
                .sort((a, b) => b[1] - a[1])
                .slice(0, 5);

            new Chart(document.getElementById('chart4'), {
                type: 'bar',
                data: {
                    labels: topBooks.map(book => book[0]),
                    datasets: [{
                        label: 'Most Issued Books',
                        data: topBooks.map(book => book[1]),
                        backgroundColor: '#4bc0c0'
                    }]
                }
            });
        }

        window.onload = () => {
            new Display().add(listArray);
        };
    </script>
</body>
</html>
